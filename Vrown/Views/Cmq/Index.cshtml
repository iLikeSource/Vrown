@{
    var svgModels = ViewBag.SVGModel;
    var width     = ViewBag.Width;
    var height    = ViewBag.Height;
}

<div>
    <br/>
    <br/>
    <div>部材長:<input id="length" type="text" /></div><br/>
    <strong>Type:</strong>
    <strong>X1  :</strong>
    <strong>X2  :</strong>
    <strong>P1  :</strong>
    <strong>P2  :</strong><br/>
    <button onclick="updateTable()">更新</button><br/>
    <div id="grid_load"></div><BR/>
</div>
<div>
    <svg width="@width" height="@height" viewBox="0 0 400 400" version="1.1" xmlns="http://www.w3.org/2000/svg">
        <rect x="0" y="0" width="400" height="400" stroke-width="5" stroke="gray" fill="white"/>
        @Html.Raw(svgModels)
    </svg>
</div>

<script>
    function getTable() {
        return document.getElementById('grid_load');
    }
    function setupTable(grid, data) {
        var colHeaderKeys = [ 'Type', 'X1', 'X2', 'P1', 'P2' ]
        return new Handsontable(
            grid,
            {
                data: data,
                rowHeaders: true,
                colHeaders: colHeaderKeys,
                contextMenu: {
                    items: {
                        row_above: { name: '上に行を挿入' },
                        row_below: { name: '下に行を挿入' },
                        remove_row: { name: '行を削除' }
                    }
                },
                
            }
        );
    }
    function updateTable() {
        table.render();
    }
    var data =
        [{ load_type: null, x1: null, x2: null, p1: null, p2: null },
         { load_type: null, x1: null, x2: null, p1: null, p2: null },
         { load_type: null, x1: null, x2: null, p1: null, p2: null },
         { load_type: null, x1: null, x2: null, p1: null, p2: null },
         { load_type: null, x1: null, x2: null, p1: null, p2: null }];
    var grid = getTable();
    var table = setupTable(grid, data);
</script>